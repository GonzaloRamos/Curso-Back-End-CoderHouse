<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chat app</title>
    <script src="/socket.io/socket.io.js"></script>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
      crossorigin="anonymous"
    />
    <script src="https://cdn.jsdelivr.net/npm/normalizr@3.6.1/dist/normalizr.browser.min.js"></script>
  </head>

  <!-- TODO agregar partials correctamente -->
  <% include ("./partials/header.js" , {
  links:[{href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css",rel="stylesheet",
  integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3",
  crossorigin="anonymous"}], scripts: [{src: "/socket.io/socket.io.js"},
  {src:"https://cdn.jsdelivr.net/npm/normalizr@3.6.1/dist/normalizr.browser.min.js"}]}) %>
  <body style="padding: 70px">
    <div class="container mt-3">
      <h1 class="alert alert-success">
        Bienvenide, <%= nombre %>
        <button type="submit" class="btn btn-warning float-right mt-2" id="btn-logout">
          Desloguear
        </button>
      </h1>
    </div>
    <div class="container">
      <h1>Ingresar Producto</h1>
      <hr />
      <form action="/api/productos/save" method="post" id="formProduct">
        <div class="input-group">
          <span class="input-group-text">Nombre y precio</span>
          <input type="text" name="title" aria-label="First name" class="form-control" />
          <input type="number" name="price" aria-label="Last name" class="form-control" />
        </div>
        <div class="mb-3">
          <label for="exampleFormControlInput1" class="form-label">Imagen</label>
          <input
            type="text"
            class="form-control"
            name="image"
            id="exampleFormControlInput1"
            placeholder="Ingresa la url"
          />
        </div>
        <button class="btn btn-primary" type="submit">Enviar</button>
      </form>

      <div id="dataProductos"></div>

      <h2>Chat App</h2>
      <hr />
      <form action="">
        <div class="row">
          <div class="col-4 mb-2">
            <input
              type="email"
              name="id"
              id="inputEmail"
              class="form-control"
              placeholder="Ingresa tu e-mail"
            />
          </div>
          <div class="col-4 mb-2">
            <input
              type="text"
              name="nombre"
              id="inputNombre"
              class="form-control"
              placeholder="Ingresa tu nombre"
            />
          </div>
          <div class="col-4">
            <input
              type="text"
              name="apellido"
              id="inputApellido"
              class="form-control"
              placeholder="Ingresa tu apellido"
            />
          </div>
          <div class="col-4 mb-2">
            <input
              type="number"
              name="edad"
              id="inputEdad"
              class="form-control"
              placeholder="Ingresa tu edad"
            />
          </div>
          <div class="col-4 mb-2">
            <input
              type="text"
              name="alias"
              id="inputAlias"
              class="form-control"
              placeholder="Ingresa tu alias"
            />
          </div>
          <div class="col-4 mb-2">
            <input
              type="text"
              name="avatar"
              id="inputAvatar"
              class="form-control"
              placeholder="Ingresa la URL de tu avatar"
            />
          </div>
          <div class="col-4">
            <input
              type="text"
              name="mensaje"
              id="inputMensaje"
              class="form-control"
              placeholder="Mensaje de chat"
            />
          </div>
          <div class="col-4">
            <button type="submit" id="buttonSend" class="btn btn-outline-info">
              Enviar
            </button>
          </div>
        </div>
      </form>
      <hr />
      <h2 id="compresion"></h2>
      <div id="chat" class="mb-5">
        <ul id="messages" class="list-group"></ul>
      </div>
    </div>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
      crossorigin="anonymous"
    ></script>

    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.7/handlebars.min.js"
      integrity="sha512-RNLkV3d+aLtfcpEyFG8jRbnWHxUqVZozacROI4J2F1sTaDqo1dPQYs01OMi1t1w9Y2FdbSCDSQ2ZVdAC8bzgAg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    ></script>

    <script type="text/javascript">
      const socket = io();

      const $ = (selector) => document.querySelector(selector);

      const button = $("#buttonSend");
      const btnLogOut = $("#btn-logout");
      console.log(btnLogOut);
      const deNormalizeData = (data) => {
        const schemaAuthor = new normalizr.schema.Entity(
          "author",
          {},
          {idAttribute: "id"}
        );

        const schemaMensaje = new normalizr.schema.Entity(
          "post",
          {author: schemaAuthor},
          {idAttribute: "_id"}
        );

        const schemaMensajes = new normalizr.schema.Entity(
          "posts",
          {mensajes: [schemaMensaje]},
          {idAttribute: "id"}
        );

        const denormalizePost = normalizr.denormalize(
          data.result,
          schemaMensajes,
          data.entities
        );

        return denormalizePost;
      };

      const getCompresion = (item, item2) => {
        const length1 = JSON.stringify(item).length;
        const length2 = JSON.stringify(item2).length;
        const compresion = parseInt((length1 * 100) / length2);

        return compresion;
      };

      const messageForm = {
        inputMsj: $("#inputMensaje"),
        inputNombre: $("#inputNombre"),
        inputApellido: $("#inputApellido"),
        inputEdad: $("#inputEdad"),
        inputAlias: $("#inputAlias"),
        inputAvatar: $("#inputAvatar"),
        inputEmail: $("#inputEmail"),
      };

      const sendMesaage = (e, formInputs) => {
        e.preventDefault();
        const {
          inputMsj,
          inputNombre,
          inputApellido,
          inputEdad,
          inputAlias,
          inputAvatar,
          inputEmail,
        } = formInputs;

        const mensaje = {
          author: {
            id: inputEmail.value,
            nombre: inputNombre.value,
            apellido: inputApellido.value,
            edad: inputEdad.value,
            alias: inputAlias.value,
            avatar: inputAvatar.value,
          },

          texto: inputMsj.value,
        };

        socket.emit("incomingMessage", mensaje);
        inputMsj.value = "";
        inputMsj.focus();
      };

      button.addEventListener("click", (event) => {
        sendMesaage(event, messageForm);
      });

      btnLogOut.addEventListener("click", () => {
        window.location.href = "/logout";
      });

      const separateObject = (obj) => {
        const res = [];
        const keys = Object.keys(obj);

        keys.forEach((key) => {
          res.push({
            [key]: obj[key],
          });
        });
        return res;
      };

      socket.on("chat", (messages) => {
        const result = deNormalizeData(messages);
        const compresion = getCompresion(messages, result);
        const arrayMensajes = separateObject(result);
        const texto = arrayMensajes
          .map((mensaje, index) => {
            return `<li class="list-group-item mt-3"> <span>${
              mensaje[index].author.nombre
            } ${mensaje[index].author.apellido}</span> <span class="text-primary fw-bold">
      ${mensaje[
        index
      ].timeStamp.toLocaleString()}}</span> <span class="text-success"> [Alias: ${
              mensaje[index].author.alias
            } ]</span> <img src="${
              mensaje[index].author.avatar
            }" class"img-fluid img-thumbnail" alt="user avatar" />: ${
              mensaje[index].texto
            }</li>`;
          })
          .join("");

        $("#messages").innerHTML = texto;
        $("#compresion").innerText = `Porcentaje de compresion: %${compresion}`;
      });

      (async () => {
        const productos = await fetch("http://localhost:8082/api/productos", {
          headers: {"Content-Type": "application/json"},
        });

        if (productos.status === 200) {
          const productosJson = await productos.json();

          fetch("http://localhost:8082/public/template/productos.tpl")
            .then((res) => res.text())
            .then((data) => {
              const template = Handlebars.compile(data);
              const html = template({productosJson});
              $("#dataProductos").innerHTML = html;
            });
        }
      })();

      console.log("Hola desde index.js public");
    </script>
  </body>
</html>
